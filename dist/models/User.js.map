{"version":3,"file":"User.js","sourceRoot":"/","sources":["models/User.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,QAAQ,CAAC;AAGlC,MAAM,IAAI;IAIN,YAAY,QAAkB;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;IAC1C,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,UAAkB;QAC/C,MAAM,SAAS,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;YACjD,KAAK,EAAE;gBACH,UAAU,EAAE,UAAU;aACzB;SACJ,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACrB,CAAC;IAEM,KAAK,CAAC,aAAa;QACtB,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;YACxC,IAAI,EAAE;gBACF,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC9B;SACJ,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AACD,eAAe,IAAI,CAAC","sourcesContent":["import prismaClient from \"prisma\";\nimport { BaseUser } from \"types/user\";\n\nclass User {\n    private userName: string;\n    private telegramId: bigint;\n\n    constructor(userData: BaseUser) {\n        this.userName = userData.userName;\n        this.telegramId = userData.telegramId;\n    }\n\n    public static async existingUser(telegramId: bigint) {\n        const existUser = await prismaClient.user.findUnique({\n            where: {\n                telegramId: telegramId,\n            },\n        });\n        return existUser;\n    }\n\n    public async insertNewUser() {\n        const user = await prismaClient.user.create({\n            data: {\n                userName: this.userName,\n                telegramId: this.telegramId,\n            },\n        });\n        return user;\n    }\n}\nexport default User;\n"]}