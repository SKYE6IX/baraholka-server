generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model health_check {
    id         Int       @id @default(autoincrement())
    updated_at DateTime? @default(now()) @db.Timestamptz(6)
}

model Ad {
    id          String    @id @default(uuid())
    user        User      @relation("Ads", fields: [userId], references: [id], onDelete: Cascade)
    userId      String
    title       String
    description String
    price       Float
    currency    Currency  @default(GEL)
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @default(now())
    images      Image[]   @relation("Images")
    location    Location? @relation("Location")
    source      Source    @default(TELEGRAM_AD)
}

model Image {
    id        String   @id @default(uuid())
    url       String
    ad        Ad       @relation("Images", fields: [adId], references: [id], onDelete: Cascade)
    adId      String
    createdAt DateTime @default(now())
}

model Category {
    id            String        @id @default(uuid())
    name          String
    subCategories SubCategory[]
}

model SubCategory {
    id         String   @id @default(uuid())
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId String
}

model Location {
    id       String  @id @default(uuid())
    country  String
    city     String
    location String?
    ad       Ad      @relation("Location", fields: [adId], references: [id], onDelete: Cascade)
    adId     String  @unique
}

model User {
    id         String @id @default(uuid())
    telegramId BigInt @unique @db.BigInt
    userName   String
    ads        Ad[]   @relation("Ads")
}

enum Source {
    TELEGRAM_AD
    SITE_AD
}

enum Currency {
    GEL
    USD
}
